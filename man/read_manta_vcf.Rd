% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sv_manta.R
\name{read_manta_vcf}
\alias{read_manta_vcf}
\title{Read Manta VCF}
\usage{
read_manta_vcf(vcf)
}
\arguments{
\item{vcf}{Path to Manta VCF file. Can be compressed (\code{.vcf.gz}) or not (\code{.vcf}).}
}
\value{
A dataframe (\code{tibble}) with the following fields from the VCF:
\itemize{
\item chrom1: \code{CHROM}
\item pos1: \code{POS} | \code{INFO/BPI_START}
\item pos2: \code{INFO/END} | \code{INFO/BPI_END}
\item id: \code{ID}
\item mateid: \code{INFO/MATEID}
\item svtype: \code{INFO/SVTYPE}
\item filter: \code{FILTER}
}
}
\description{
Read main columns of interest from Manta VCF using bcftools or vcfR
}
\details{
This function uses bcftools (https://samtools.github.io/bcftools/bcftools.html)
or vcfR (https://github.com/knausb/vcfR) to read in the VCF file.
If you've got a large VCF file, or one with humongous gene annotations,
vcfR  will probably choke. A much quicker alternative is bcftools, but you need
to make sure it has been installed and that it can be found in the R session
via the PATH environmental variable. If you're an RStudio user, you can make
sure it recognises the user's PATH by opening the RStudio app via the terminal,
or perhaps following the suggestions here: https://stackoverflow.com/questions/31121645.
}
\examples{
vcf <- system.file("extdata", "HCC2218_manta.vcf", package = "pebbles")
vcf2 <- system.file("extdata", "manta_no_bpi.vcf", package = "pebbles")
rock:::read_manta_vcf(vcf)
rock:::read_manta_vcf(vcf2)

}
